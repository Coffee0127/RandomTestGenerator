import { Injectable } from '@angular/core';

import 'rxjs/Rx';
import { Observable } from 'rxjs/Rx';

import { TestGeneratorService } from '../test-generator.service';

import { Version } from 'app/test-generator/model/version.model';

@Injectable()
export class LocalTestGeneratorService implements TestGeneratorService {

  private mockTimeout = 500;

  constructor() { }

  findCategories() {

    return Observable.from([{"oid":"F710EF2D72CA4E3391398E6D5EE4DB4E","desc":"Java Building Blocks"},{"oid":"14600C2DB3B44CEA8E7EB2008E417A7E","desc":"Operators and Statements"},{"oid":"8029EA0C00DF4E20BDF7D1DCF7C0DFFC","desc":"Core Java APIs"},{"oid":"20F5026F5D5B47C09C365FA0BC04E813","desc":"Methods and Encapsulation"},{"oid":"85F7239D509C484C93975DF6DE309F56","desc":"Class Design"},{"oid":"732D1F0B9BB740C19208912D3F6494F4","desc":"Exceptions"}])
      .delay(this.mockTimeout)
      .toArray();
  }

  findQuestLevels() {
    return Observable.from([{"id":1,"desc":"難易度1","correctRate":0.65,"number":null},{"id":2,"desc":"難易度2","correctRate":0.6,"number":null},{"id":3,"desc":"難易度3","correctRate":0.55,"number":null},{"id":4,"desc":"難易度4","correctRate":0.5,"number":null},{"id":5,"desc":"難易度5","correctRate":0.4,"number":null}])
      .delay(this.mockTimeout)
      .toArray();
  }

  generateTestPreview(cond) {
    return Observable.of({"oid":null,"createDatetime":null,"creator":null,"passingScore":68,"questions":[{"oid":null,"questionNo":1,"desc":"Which of the following are true statements? (Choose all that apply)","correctAnswer":"A,E","answers":[{"oid":null,"answerNo":"A","desc":"Java is an object-oriented language.","correct":true},{"oid":null,"answerNo":"B","desc":"Java allows operator overloading.","correct":false},{"oid":null,"answerNo":"C","desc":"Java has pointers to specific locations in memory.","correct":false},{"oid":null,"answerNo":"D","desc":"Java is a procedural language.","correct":false},{"oid":null,"answerNo":"E","desc":"Java code compiled on Windows can run on Linux.","correct":true},{"oid":null,"answerNo":"F","desc":"Java is a functional programming language.","correct":false}]},{"oid":null,"questionNo":2,"desc":"Given the following class in the file /my/directory/named/A/Bird.java:\nINSERT CODE HERE\npublic class Bird { }\nWhich of the following replaces INSERT CODE HERE if we compile from /my/directory?\n(Choose all that apply)","correctAnswer":"C","answers":[{"oid":null,"answerNo":"A","desc":"package my.directory.named.a;","correct":false},{"oid":null,"answerNo":"B","desc":"package named.a;","correct":false},{"oid":null,"answerNo":"C","desc":"package named.A;","correct":true},{"oid":null,"answerNo":"D","desc":"Does not compile.","correct":false},{"oid":null,"answerNo":"E","desc":"package my.directory.named.A;","correct":false},{"oid":null,"answerNo":"F","desc":"package a;","correct":false},{"oid":null,"answerNo":"G","desc":"package A;","correct":false}]},{"oid":null,"questionNo":3,"desc":"Which of the following are true? (Choose all that apply)\n1. short numPets = 5;\n2. int numGrains = 5.6;\n3. String name = \"Scruffy\";\n4. numPets.length();\n5. numGrains.length();\n6. name.length();","correctAnswer":"A,E,F","answers":[{"oid":null,"answerNo":"A","desc":"Line 2 generates a compiler error.","correct":true},{"oid":null,"answerNo":"B","desc":"Line 1 generates a compiler error.","correct":false},{"oid":null,"answerNo":"C","desc":"Line 3 generates a compiler error.","correct":false},{"oid":null,"answerNo":"D","desc":"The code compiles as is.","correct":false},{"oid":null,"answerNo":"E","desc":"Line 5 generates a compiler error.","correct":true},{"oid":null,"answerNo":"F","desc":"Line 4 generates a compiler error.","correct":true},{"oid":null,"answerNo":"G","desc":"Line 6 generates a compiler error.","correct":false}]},{"oid":null,"questionNo":4,"desc":"Which of the following are true? (Choose all that apply)","correctAnswer":"A,C","answers":[{"oid":null,"answerNo":"A","desc":"An instance variable of type String defaults to null.","correct":true},{"oid":null,"answerNo":"B","desc":"None of the above.","correct":false},{"oid":null,"answerNo":"C","desc":"An instance variable of type double defaults to 0.0.","correct":true},{"oid":null,"answerNo":"D","desc":"An instance variable of type int defaults to null.","correct":false},{"oid":null,"answerNo":"E","desc":"An instance variable of type double defaults to null.","correct":false},{"oid":null,"answerNo":"F","desc":"An instance variable of type String defaults to 0.0.","correct":false},{"oid":null,"answerNo":"G","desc":"An instance variable of type int defaults to 0.0.","correct":false}]},{"oid":null,"questionNo":5,"desc":"What is the result of the following code snippet?\n1 : final char a = 'A', d = 'D';\n2 : char grade = 'B';\n3 : switch(grade) {\n4 :   case a:\n5 :   case 'B': System.out.print(\"great\");\n6 :   case 'C': System.out.print(\"good\"); break;\n7 :   case d:\n8 :   case 'F': System.out.print(\"not good\");\n9 : }","correctAnswer":"D","answers":[{"oid":null,"answerNo":"A","desc":"The code will not compile because of line 1.","correct":false},{"oid":null,"answerNo":"B","desc":"The code will not compile because of line 4.","correct":false},{"oid":null,"answerNo":"C","desc":"The code will not compile because of lines 4 and 7.","correct":false},{"oid":null,"answerNo":"D","desc":"greatgood","correct":true},{"oid":null,"answerNo":"E","desc":"great","correct":false}]},{"oid":null,"questionNo":6,"desc":"What change would allow the following code snippet to compile? (Choose all that apply)\nlong x = 10;\nint y = 2 * x;","correctAnswer":"A,C,E,F","answers":[{"oid":null,"answerNo":"A","desc":"Cast 2 * x on line 2 to int.","correct":true},{"oid":null,"answerNo":"B","desc":"Change the data type of y on line 2 to short.","correct":false},{"oid":null,"answerNo":"C","desc":"Cast x on line 2 to int.","correct":true},{"oid":null,"answerNo":"D","desc":"No change; it compiles as is.","correct":false},{"oid":null,"answerNo":"E","desc":"Change the data type of y on line 2 to long.","correct":true},{"oid":null,"answerNo":"F","desc":"Change the data type of x on line 1 to short.","correct":true}]},{"oid":null,"questionNo":7,"desc":"What data type (or types) will allow the following code snippet to compile? (Choose all that apply)\nbyte x = 5; byte y = 10;\n____ z = x + y;","correctAnswer":"B,D,E","answers":[{"oid":null,"answerNo":"A","desc":"short","correct":false},{"oid":null,"answerNo":"B","desc":"int","correct":true},{"oid":null,"answerNo":"C","desc":"byte","correct":false},{"oid":null,"answerNo":"D","desc":"double","correct":true},{"oid":null,"answerNo":"E","desc":"long","correct":true},{"oid":null,"answerNo":"F","desc":"boolean","correct":false}]},{"oid":null,"questionNo":8,"desc":"What is the output of the following application?\n1: public class CompareValues {\n2:   public static void main(String[] args) {\n3:     int x = 0;\n4:     while(x++ < 10) {}\n5:     String message = x > 10 ? \"Greater than\" : false;\n6:     System.out.println(message+\",\"+x);\n7:   }\n8: }","correctAnswer":"B","answers":[{"oid":null,"answerNo":"A","desc":"Greater than,11","correct":false},{"oid":null,"answerNo":"B","desc":"The code will not compile because of line 5.","correct":true},{"oid":null,"answerNo":"C","desc":"Greater than,10","correct":false},{"oid":null,"answerNo":"D","desc":"false,11","correct":false},{"oid":null,"answerNo":"E","desc":"The code will not compile because of line 4.","correct":false},{"oid":null,"answerNo":"F","desc":"false,10","correct":false}]},{"oid":null,"questionNo":9,"desc":"What is the result of the following code?\n1: int total = 0;\n2: StringBuilder letters = new StringBuilder(\"abcdefg\");\n3: total += letters.substring(1, 2).length();\n4: total += letters.substring(6, 6).length();\n5: total += letters.substring(6, 5).length();\n6: System.out.println(total);","correctAnswer":"F","answers":[{"oid":null,"answerNo":"A","desc":"3","correct":false},{"oid":null,"answerNo":"B","desc":"7","correct":false},{"oid":null,"answerNo":"C","desc":"1","correct":false},{"oid":null,"answerNo":"D","desc":"2","correct":false},{"oid":null,"answerNo":"E","desc":"The code does not compile.","correct":false},{"oid":null,"answerNo":"F","desc":"An exception is thrown.","correct":true}]},{"oid":null,"questionNo":10,"desc":"Which of the following are output by this code? (Choose all that apply)\n1: String s = \"Hello\";\n2: String t = new String(s);\n3: if (\"Hello\".equals(s)) System.out.println(\"one\");\n4: if (t == s) System.out.println(\"two\");\n5: if (t.equals(s)) System.out.println(\"three\");\n6: if (\"Hello\" == s) System.out.println(\"four\");\n7: if (\"Hello\" == t) System.out.println(\"five\");","correctAnswer":"A,B,C","answers":[{"oid":null,"answerNo":"A","desc":"three","correct":true},{"oid":null,"answerNo":"B","desc":"four","correct":true},{"oid":null,"answerNo":"C","desc":"one","correct":true},{"oid":null,"answerNo":"D","desc":"five","correct":false},{"oid":null,"answerNo":"E","desc":"The code does not compile.","correct":false},{"oid":null,"answerNo":"F","desc":"two","correct":false}]},{"oid":null,"questionNo":11,"desc":"What is the output of the following code? (import omitted)\n1: LocalDate date = LocalDate.parse(\"2018-04-30\", DateTimeFormatter.ISO_LOCAL_ DATE);\n2: date.plusDays(2);\n3: date.plusHours(3);\n4: System.out.println(date.getYear() + \" \" + date.getMonth() + \" \" + date.getDayOfMonth());","correctAnswer":"B","answers":[{"oid":null,"answerNo":"A","desc":"2018 APRIL 2","correct":false},{"oid":null,"answerNo":"B","desc":"The code does not compile.","correct":true},{"oid":null,"answerNo":"C","desc":"2018 APRIL 30","correct":false},{"oid":null,"answerNo":"D","desc":"A runtime exception is thrown.","correct":false},{"oid":null,"answerNo":"E","desc":"2018 MAY 2","correct":false}]},{"oid":null,"questionNo":12,"desc":"Which are true statements? (Choose all that apply)","correctAnswer":"C,D,F","answers":[{"oid":null,"answerNo":"A","desc":"StringBuilder is immutable.","correct":false},{"oid":null,"answerNo":"B","desc":"An immutable object cannot be garbage collected.","correct":false},{"oid":null,"answerNo":"C","desc":"String is immutable.","correct":true},{"oid":null,"answerNo":"D","desc":"An immutable object cannot be modified.","correct":true},{"oid":null,"answerNo":"E","desc":"StringBuffer is immutable.","correct":false},{"oid":null,"answerNo":"F","desc":"An immutable object can be garbage collected.","correct":true},{"oid":null,"answerNo":"G","desc":"An immutable object can be modified.","correct":false}]},{"oid":null,"questionNo":13,"desc":"Which of the following compile? (Choose all that apply)","correctAnswer":"C,D,G","answers":[{"oid":null,"answerNo":"A","desc":"public void moreF(String... values, int[] nums) { }","correct":false},{"oid":null,"answerNo":"B","desc":"public void moreE(String[] values, ...int nums) { }","correct":false},{"oid":null,"answerNo":"C","desc":"public void moreB(String values, int... nums) { }","correct":true},{"oid":null,"answerNo":"D","desc":"public void moreG(String[] values, int[] nums) { }","correct":true},{"oid":null,"answerNo":"E","desc":"public void moreC(int... nums, String values) { }","correct":false},{"oid":null,"answerNo":"F","desc":"public void moreD(String... values, int... nums) { }","correct":false},{"oid":null,"answerNo":"G","desc":"public void moreA(int... nums) { }","correct":true}]},{"oid":null,"questionNo":14,"desc":"What is the result of the following?\n01: public class Order {\n02:   String value = \"t\";\n03:   { value += \"a\"; }\n04:   { value += \"c\"; }\n05:   public Order() {\n06:     value += \"b\";\n07:   }\n08:   public Order(String s) {\n09:     value += s;\n10:   }\n11:   public static void main(String[] args) {\n12:     Order order = new Order(\"f\");\n13:     order = new Order();\n14:     System.out.println(order.value);\n15:   }\n16: }","correctAnswer":"G","answers":[{"oid":null,"answerNo":"A","desc":"tacbf","correct":false},{"oid":null,"answerNo":"B","desc":"The code does not compile.","correct":false},{"oid":null,"answerNo":"C","desc":"tacftacb","correct":false},{"oid":null,"answerNo":"D","desc":"An exception is thrown.","correct":false},{"oid":null,"answerNo":"E","desc":"tacfb","correct":false},{"oid":null,"answerNo":"F","desc":"tacf","correct":false},{"oid":null,"answerNo":"G","desc":"tacb","correct":true}]},{"oid":null,"questionNo":15,"desc":"What is the result of the following class?\n01: import java.util.function.*;\n02:\n03: public class Panda {\n04:   int age;\n05:   public static void main(String[] args) {\n06:     Panda p1 = new Panda();\n07:     p1.age = 1;\n08:     check(p1, p -> p.age < 5);\n09:   }\n10:   private static void check(Panda panda, Predicate<Panda> pred) {\n11:     String result = pred.test(panda) ? \"match\" : \"not match\";\n12:     System.out.print(result);\n13:   }\n14: }","correctAnswer":"D","answers":[{"oid":null,"answerNo":"A","desc":"Compiler error on line 8.","correct":false},{"oid":null,"answerNo":"B","desc":"not match","correct":false},{"oid":null,"answerNo":"C","desc":"A runtime exception is thrown.","correct":false},{"oid":null,"answerNo":"D","desc":"match","correct":true},{"oid":null,"answerNo":"E","desc":"Compiler error on line 10.","correct":false},{"oid":null,"answerNo":"F","desc":"Compiler error on line 11.","correct":false}]},{"oid":null,"questionNo":16,"desc":"Which of the following complete the constructor so that this code prints out 50? (Choose all that apply)\n1: public class Cheetah {\n2:   int numSpots;\n3:   public Cheetah(int numSpots) {\n4:     // INSERT CODE HERE\n5:   }\n6:   public static void main(String[] args) {\n7:     System.out.println(new Cheetah(50).numSpots);\n8:   }\n9: }","correctAnswer":"D","answers":[{"oid":null,"answerNo":"A","desc":"numSpots = super.numSpots;","correct":false},{"oid":null,"answerNo":"B","desc":"super.numSpots = numSpots;","correct":false},{"oid":null,"answerNo":"C","desc":"None of the above.","correct":false},{"oid":null,"answerNo":"D","desc":"this.numSpots = numSpots;","correct":true},{"oid":null,"answerNo":"E","desc":"numSpots = this.numSpots;","correct":false},{"oid":null,"answerNo":"F","desc":"numSpots = numSpots;","correct":false}]},{"oid":null,"questionNo":17,"desc":"What modifiers are assumed for all interface variables? (Choose all that apply)","correctAnswer":"C,D,F","answers":[{"oid":null,"answerNo":"A","desc":"private","correct":false},{"oid":null,"answerNo":"B","desc":"protected","correct":false},{"oid":null,"answerNo":"C","desc":"static","correct":true},{"oid":null,"answerNo":"D","desc":"public","correct":true},{"oid":null,"answerNo":"E","desc":"abstract","correct":false},{"oid":null,"answerNo":"F","desc":"final","correct":true}]},{"oid":null,"questionNo":18,"desc":"Choose the correct statement about the following code:\n1: public interface Herbivore {\n2:   int amount = 10;\n3:   public static void eatGrass();\n4:   public int chew() {\n5:     return 13;\n6:   }\n7: }","correctAnswer":"E","answers":[{"oid":null,"answerNo":"A","desc":"The code will not compile because of line 2.","correct":false},{"oid":null,"answerNo":"B","desc":"The code will not compile because of line 4.","correct":false},{"oid":null,"answerNo":"C","desc":"It compiles and runs without issue.","correct":false},{"oid":null,"answerNo":"D","desc":"The code will not compile because of line 3.","correct":false},{"oid":null,"answerNo":"E","desc":"The code will not compile because of lines 3 and 4.","correct":true},{"oid":null,"answerNo":"F","desc":"The code will not compile because of lines 2 and 3.","correct":false}]},{"oid":null,"questionNo":19,"desc":"Which of the following may only be hidden and not overridden? (Choose all that apply)","correctAnswer":"A,C,E,F","answers":[{"oid":null,"answerNo":"A","desc":"private instance methods","correct":true},{"oid":null,"answerNo":"B","desc":"public instance methods","correct":false},{"oid":null,"answerNo":"C","desc":"private variables","correct":true},{"oid":null,"answerNo":"D","desc":"protected instance methods","correct":false},{"oid":null,"answerNo":"E","desc":"public variables","correct":true},{"oid":null,"answerNo":"F","desc":"static methods","correct":true}]},{"oid":null,"questionNo":20,"desc":"Which of the following statements can be inserted in the blank line so that the code will compile successfully? (Choose all that apply)\n1: public interface CanHop { }\n2: public class Frog implements CanHop {\n3:   public static void main(String[] args) {\n4:     ________ frog = new TurtleFrog();\n5:   }\n6: }\n7: public class BrazilianHornedFrog extends Frog { }\n8: public class TurtleFrog extends Frog { }","correctAnswer":"A,B,C,E","answers":[{"oid":null,"answerNo":"A","desc":"Frog","correct":true},{"oid":null,"answerNo":"B","desc":"CanHop","correct":true},{"oid":null,"answerNo":"C","desc":"Object","correct":true},{"oid":null,"answerNo":"D","desc":"Long","correct":false},{"oid":null,"answerNo":"E","desc":"TurtleFrog","correct":true},{"oid":null,"answerNo":"F","desc":"BrazilianHornedFrog","correct":false}]},{"oid":null,"questionNo":21,"desc":"Which of the following are true? (Choose all that apply)","correctAnswer":"A,B,E,F","answers":[{"oid":null,"answerNo":"A","desc":"Checked exceptions are allowed to be handled or declared.","correct":true},{"oid":null,"answerNo":"B","desc":"Checked exceptions are required to be handled or declared.","correct":true},{"oid":null,"answerNo":"C","desc":"Runtime exceptions are required to be handled or declared.","correct":false},{"oid":null,"answerNo":"D","desc":"Errors are required to be handled or declared.","correct":false},{"oid":null,"answerNo":"E","desc":"Errors are allowed to be handled or declared.","correct":true},{"oid":null,"answerNo":"F","desc":"Runtime exceptions are allowed to be handled or declared.","correct":true}]},{"oid":null,"questionNo":22,"desc":"What is printed by the following? (Choose all that apply)\n01: public class Mouse {\n02:   public String name;\n03:   public void run() {\n04:     System.out.print(\"1\");\n05:     try {\n06:       System.out.print(\"2\");\n07:       name.toString();\n08:       System.out.print(\"3\");\n09:     } catch (NullPointerException e) {\n10:       System.out.print(\"4\");\n11:       throw e;\n12:     }\n13:     System.out.print(\"5\");\n14:   }\n15:   public static void main(String[] args) {\n16:     Mouse jerry = new Mouse();\n17:     jerry.run();\n18:     System.out.print(\"6\");\n19:   }\n20: }","correctAnswer":"A,C,D,G","answers":[{"oid":null,"answerNo":"A","desc":"The stack trace for a NullPointerException","correct":true},{"oid":null,"answerNo":"B","desc":"5","correct":false},{"oid":null,"answerNo":"C","desc":"4","correct":true},{"oid":null,"answerNo":"D","desc":"2","correct":true},{"oid":null,"answerNo":"E","desc":"6","correct":false},{"oid":null,"answerNo":"F","desc":"3","correct":false},{"oid":null,"answerNo":"G","desc":"1","correct":true}]},{"oid":null,"questionNo":23,"desc":"What will happen if you add the statement System.out.println(5 / 0); to a working main() method?","correctAnswer":"A","answers":[{"oid":null,"answerNo":"A","desc":"It will run and throw an ArithmeticException.","correct":true},{"oid":null,"answerNo":"B","desc":"None of the above.","correct":false},{"oid":null,"answerNo":"C","desc":"It will run and throw an IllegalArgumentException.","correct":false},{"oid":null,"answerNo":"D","desc":"It will not compile.","correct":false},{"oid":null,"answerNo":"E","desc":"It will not run.","correct":false}]},{"oid":null,"questionNo":24,"desc":"Which of the following statements are true? (Choose all that apply)","correctAnswer":"A,B,D,E","answers":[{"oid":null,"answerNo":"A","desc":"You can declare any subclass of Error in the throws part of a method declaration.","correct":true},{"oid":null,"answerNo":"B","desc":"You can declare a method with Exception as the return type.","correct":true},{"oid":null,"answerNo":"C","desc":"You can declare any subclass of Object in the throws part of a method declaration.","correct":false},{"oid":null,"answerNo":"D","desc":"You can declare any subclass of Exception in the throws part of a method declaration.","correct":true},{"oid":null,"answerNo":"E","desc":"You can declare any subclass of RuntimeException in the throws part of a method declaration.","correct":true}]},{"oid":null,"questionNo":25,"desc":"What is printed besides the stack trace caused by the NullPointerException from line 16?\n01: public class DoSomething {\n02:   public void go() {\n03:     System.out.print(\"A\");\n04:     try {\n05:       stop();\n06:     } catch (ArithmeticException e) {\n07:       System.out.print(\"B\");\n08:     } finally {\n09:       System.out.print(\"C\");\n10:     }\n11:     System.out.print(\"D\");\n12:   }\n13:   public void stop() {\n14:     System.out.print(\"E\");\n15:     Object x = null;\n16:     x.toString();\n17:     System.out.print(\"F\");\n18:   }\n19:   public static void main(String[] args) {\n20:     new DoSomething().go();\n21:   }\n22: }","correctAnswer":"C","answers":[{"oid":null,"answerNo":"A","desc":"AECD","correct":false},{"oid":null,"answerNo":"B","desc":"AEBCD","correct":false},{"oid":null,"answerNo":"C","desc":"AEC","correct":true},{"oid":null,"answerNo":"D","desc":"AE","correct":false},{"oid":null,"answerNo":"E","desc":"No output appears other than the stack trace.","correct":false}]}]})
      .delay(this.mockTimeout);
  }

  generate(version: Version) {
    return Observable.of('50e5860597454e4db4c648690f258a38');
  }
}
